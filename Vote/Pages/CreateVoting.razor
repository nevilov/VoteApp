@page "/CreateVoting"
@using System.Net.Http
@using Vote.Models
@inject NavigationManager NavigationManager
@inject HttpClient Http

<div>
    <EditForm Model="@Options" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInValidSubmit">
        <div class="alert @StatusClass">@StatusMessage</div>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h2>New voting</h2>
        <div class="input-group mb-3">
            <div class="create_voting">
                <div class="input voting">
                    <input class="form-control"
                           @bind="Options.TitleVoting"
                           type="text"
                           placeholder="Title"
                           aria-describedby="button-addon1"
                           maxlength="50" />
                    <ValidationMessage For="@(() => Options.TitleVoting)" />
                </div>
                <div class="input voting">
                    <textarea class="form-control"
                              @bind="Options.DescriptionVoting"
                              id="exampleFormControlTextarea1"
                              placeholder="Description"
                              rows="3"
                              maxlength="250" />
                    <ValidationMessage For="@(() => Options.DescriptionVoting)" />
                </div>
                <div class="input voting">
                    <input class="form-control"
                           @bind="Options.Start_dateVoting"
                           placeholder="Start Date"
                           min="2020-01-01"
                           max="2200-01-01"
                           type="date" />
                </div>
                <div class="input voting">
                    <input class="form-control"
                           @bind="Options.End_dateVoting"
                           placeholder="End Date"
                           min="2020-01-01"
                           max="2200-01-01"
                           type="date" />
                </div>
                <div class="input voting">
                    <input class="form-control"
                           type="text"
                           @bind="Options.listOptions[0]"
                           placeholder="Voting Option"
                           maxlength="50" />
                </div>
                @if (optionCount > 1) {
                    <div class="input voting">
                        <input class="form-control"
                               type="text"
                               @bind="Options.listOptions[1]"
                               placeholder="Voting Option"
                               maxlength="50" />
                    </div>
                }
                @if (optionCount > 2) {
                    <div class="input voting">
                        <input class="form-control"
                               type="text"
                               @bind="Options.listOptions[2]"
                               placeholder="Voting Option"
                               maxlength="50" />
                    </div>
                }
                @if (optionCount > 3) {
                    <div class="input voting">
                        <input class="form-control"
                               type="text"
                               @bind="Options.listOptions[3]"
                               placeholder="Voting Option"
                               maxlength="50" />
                    </div>
                }
                @if (optionCount > 4) {
                    <div class="input voting">
                        <input class="form-control"
                               type="text"
                               @bind="Options.listOptions[4]"
                               placeholder="Voting Option"
                               maxlength="50" />
                    </div>
                }


                <div class="Option button">
                    <button type="button"
                            style="margin-left:10px; width: 25%;"
                            @onclick="BtnAddOption"
                            class="btn btn-outline-secondary">
                        Add Option
                    </button>

                    @*<button type="button"
                                style="margin-left:10px; width: 25%;"
                                @onclick="BtnAddOption"
                                class="btn btn-outline-danger">
                            Delete Option
                        </button>*@

                </div>
                <div class="create voting button">
                    <button type="submit" class="btn btn-success" style="font-size: 20px;">Save</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>


@code {
    private OptionVoting Options = new OptionVoting();
    

    public string StatusMessage;
    public string StatusClass;
 

    public async Task HandleValidSubmit() {
        //StatusClass = "alert-info";
        //StatusMessage = DateTime.Now + " HandleValid submit";
        var result = await Http.PostAsJsonAsync("https://localhost:5001/api/VoteInfoes", Options);
        NavigationManager.NavigateTo("");

    }
    public void HandleInValidSubmit() {
        StatusClass = "alert-info";
        StatusMessage = DateTime.Now + " HandleInValid submit";
    }



    public int optionCount = 1;
    public void BtnAddOption() {
        optionCount++;
    }



}
